<?xml version='1.0'?>
<project default="compile" basedir=".">

  <property environment="env"/>
  <property name="config" value="debug"/>
  <property name="cm.module" value="java"/>
  <property name="cm.vendor" value="lshift.net"/>
  <property name="cm.version" value="v1_0_7"/>

  <property name="build.home" value="build"/>
  <property name="doc.home" value="${build.home}/doc"/>

  <property name="compile.out" value="${build.home}/classes"/>

  <property name="dist.home" value="dist"/>
  <property name="web.home" value="web"/>
  <property name="src.home" value="src"/>


  <property name="test.src.home" value="test/src"/>
  <property name="test.compile.out" value="${build.home}/test/classes"/>

  <!-- ==================================================================== -->

  <!-- if you don't have component manager, you will need to
       copy sample.build.properties to build.properties and
       edit it appropriately -->

  <available classname="net.lshift.cm.Use" property="use.available"/>

  <target name="use" if="use.available">
    <taskdef name="use" classname="net.lshift.cm.Use"/>

    <use properties="build.properties">
      <!-- This project should not use anything - it should depend solely
      on things included in java, and should preferable fail gracefully
      with non current versions of java too -->

      <!-- exceptions are for unit testing the authored code -->
      <module name="junit" vendor="junit.org" version="3.8.1"/>
    </use>
  </target>

  <!-- ==================================================================== -->

  <target name="init" depends="use">
    <property file="build.properties"/>
  </target>

  <!-- ==================================================================== -->

  <target name="compile" depends="build"/>

  <!-- ==================================================================== -->

  <target name="build" depends="init">
    <property file="config/${config}/build.properties"/>

    <mkdir dir="${build.home}"/>

    <mkdir dir="${compile.out}"/>

    <path id="compile.classpath"/>

    <javac
      srcdir="${src.home}"
      destdir="${compile.out}"
      debug="${javac.debug}"
      deprecation="${javac.deprecation}"
      optimize="${javac.optimize}"
      target="${javac.target}">

      <classpath refid="compile.classpath"/>
    </javac>

  </target>

  <!-- ==================================================================== -->

  <target name="doc" depends="build">
    <mkdir dir="${doc.home}/javadoc"/>

    <javadoc sourcepath="src"
        destdir="${doc.home}/api"
        packagenames="*"
        author="true"
        version="true"
        use="true"
        windowtitle="LShift - Java Utilities"
        bottom="Copyright (C) 2002-2003 LShift Ltd."
        doctitle="LShift - Java Utilities">
      <classpath refid="compile.classpath"/>
    </javadoc>

  </target>

  <!-- ==================================================================== -->

  <target name="test" depends="build,use">
    <mkdir dir="${test.compile.out}"/>

    <path id="test.compile.classpath">
      <path refid="compile.classpath"/>
      <pathelement path="${compile.out}"/>
      <pathelement path="${junit.home}/junit.jar"/>
    </path>

    <javac
      srcdir="${test.src.home}"
      destdir="${test.compile.out}"
      debug="true"
      target="${javac.target}">

      <classpath refid="test.compile.classpath"/>
    </javac>

    <path id="test.classpath">
      <path refid="compile.classpath"/>
      <pathelement path="${compile.out}"/>
      <pathelement path="${test.compile.out}"/>
    </path>

    <junit fork="yes">
      <classpath refid="test.classpath"/>
      <formatter type="plain"/>
      <test name="net.lshift.java.AllTest"/>
    </junit>

  </target>

  <!-- ==================================================================== -->

  <target name="dist" depends="build,test,doc">
    <mkdir dir="${dist.home}"/>

    <!-- build the template web-app into a war -->
    <jar destfile="${dist.home}/java.lshift.net.jar"
      basedir="${build.home}/classes"/>

    <!-- add documentation to distribution -->
    <mkdir dir="${dist.home}/doc"/>
    <copy todir="${dist.home}/doc">
      <fileset dir="${doc.home}"/>
    </copy>
  </target>

  <!-- ==================================================================== -->

  <target name="install" depends="dist">
    <taskdef name="install" classname="net.lshift.cm.Install"
      classpath="${dist.home}/bin/use.jar"/>

    <install dist="${dist.home}"
      name="${cm.module}" vendor="${cm.vendor}" version="${cm.version}" />
  </target>

  <target name="publish" depends="clean" if="use.available">
    <cvs>
      <commandline>
        <argument value="tag"/>
        <argument value="${cm.version}"/>
      </commandline>
    </cvs>

    <taskdef name="publish" classname="net.lshift.cm.Publish"
      classpath="${dist.home}/bin/use.jar"/>

    <publish name="${cm.module}" vendor="${cm.vendor}" version="${cm.version}" />
  </target>

  <!-- ==================================================================== -->

  <target name="clean">
    <delete dir="${build.home}"/>
    <delete dir="${dist.home}"/>
  </target>

</project>